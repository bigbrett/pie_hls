// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _frameSIPO_HH_
#define _frameSIPO_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct frameSIPO : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > inData_TVALID;
    sc_in< sc_lv<8> > inData_TDATA;
    sc_out< sc_logic > inData_TREADY;
    sc_in< sc_lv<2> > inData_TUSER;
    sc_out< sc_lv<8> > header;
    sc_out< sc_logic > header_ap_vld;
    sc_out< sc_lv<1> > livewire;
    sc_out< sc_logic > livewire_ap_vld;


    // Module declarations
    frameSIPO(sc_module_name name);
    SC_HAS_PROCESS(frameSIPO);

    ~frameSIPO();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<1> > ap_CS_fsm0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm0_0;
    sc_signal< bool > ap_sig_21;
    sc_signal< sc_lv<2> > ap_CS_fsm1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st0_fsm1_0;
    sc_signal< bool > ap_sig_32;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_88_p4;
    sc_signal< bool > ap_sig_45;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm1_1;
    sc_signal< bool > ap_sig_51;
    sc_signal< sc_lv<1> > CNT_STATE;
    sc_signal< sc_lv<32> > byte_cnt;
    sc_signal< sc_logic > inData_TDATA_blk_n;
    sc_signal< sc_lv<1> > tmp_reg_324;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_reg_324_pp0_iter0;
    sc_signal< sc_lv<1> > CNT_STATE_load_load_fu_183_p1;
    sc_signal< sc_lv<1> > CNT_STATE_load_reg_328;
    sc_signal< sc_lv<1> > ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_6_fu_225_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_335;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_6_reg_335_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_7_fu_231_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_339;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_7_reg_339_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_8_fu_237_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_343;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_8_reg_343_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_9_fu_243_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_347;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_9_reg_347_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_s_fu_249_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_351;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_s_reg_351_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_fu_271_p2;
    sc_signal< sc_lv<1> > icmp_reg_355;
    sc_signal< sc_lv<1> > tmp_1_fu_293_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_360;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_storemerge_reg_122pp0_it0;
    sc_signal< sc_lv<1> > tmp_3_fu_195_p2;
    sc_signal< sc_lv<1> > storemerge_phi_fu_125_p4;
    sc_signal< sc_lv<8> > ap_reg_phiprechg_header_new_reg_133pp0_it0;
    sc_signal< sc_lv<8> > ap_reg_phiprechg_header_new_reg_133pp0_it1;
    sc_signal< sc_lv<8> > ap_reg_phiprechg_header_new_6_reg_146pp0_it1;
    sc_signal< sc_lv<8> > header_new_6_phi_fu_154_p14;
    sc_signal< sc_lv<8> > ap_reg_phiprechg_header_new_6_reg_146pp0_it0;
    sc_signal< sc_lv<8> > storemerge2_cast_fu_319_p1;
    sc_signal< sc_lv<32> > tmp_5_fu_213_p2;
    sc_signal< sc_lv<32> > p_off_fu_255_p2;
    sc_signal< sc_lv<31> > tmp_2_fu_261_p4;
    sc_signal< sc_lv<26> > tmp_4_fu_277_p4;
    sc_signal< sc_lv<1> > icmp5_fu_287_p2;
    sc_signal< sc_lv<3> > storemerge1_cast_fu_305_p3;
    sc_signal< sc_lv<3> > storemerge2_fu_312_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm0;
    sc_signal< sc_lv<2> > ap_NS_fsm1;
    sc_signal< bool > ap_sig_160;
    sc_signal< bool > ap_sig_164;
    sc_signal< bool > ap_sig_173;
    sc_signal< bool > ap_sig_191;
    sc_signal< bool > ap_sig_195;
    sc_signal< bool > ap_sig_55;
    sc_signal< bool > ap_sig_136;
    sc_signal< bool > ap_sig_142;
    sc_signal< bool > ap_sig_315;
    sc_signal< bool > ap_sig_82;
    sc_signal< bool > ap_sig_322;
    sc_signal< bool > ap_sig_212;
    sc_signal< bool > ap_sig_325;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm0_0;
    static const sc_lv<2> ap_ST_st2_fsm1_1;
    static const sc_lv<2> ap_ST_st0_fsm1_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_20;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_40;
    static const sc_lv<8> ap_const_lv8_D5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_FFFFFFF0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<26> ap_const_lv26_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_CNT_STATE_load_load_fu_183_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_header_new_6_reg_146pp0_it0();
    void thread_ap_reg_phiprechg_header_new_reg_133pp0_it0();
    void thread_ap_reg_phiprechg_storemerge_reg_122pp0_it0();
    void thread_ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0();
    void thread_ap_reg_ppstg_tmp_6_reg_335_pp0_iter0();
    void thread_ap_reg_ppstg_tmp_7_reg_339_pp0_iter0();
    void thread_ap_reg_ppstg_tmp_8_reg_343_pp0_iter0();
    void thread_ap_reg_ppstg_tmp_9_reg_347_pp0_iter0();
    void thread_ap_reg_ppstg_tmp_reg_324_pp0_iter0();
    void thread_ap_reg_ppstg_tmp_s_reg_351_pp0_iter0();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_136();
    void thread_ap_sig_142();
    void thread_ap_sig_160();
    void thread_ap_sig_164();
    void thread_ap_sig_173();
    void thread_ap_sig_191();
    void thread_ap_sig_195();
    void thread_ap_sig_21();
    void thread_ap_sig_212();
    void thread_ap_sig_315();
    void thread_ap_sig_32();
    void thread_ap_sig_322();
    void thread_ap_sig_325();
    void thread_ap_sig_45();
    void thread_ap_sig_51();
    void thread_ap_sig_55();
    void thread_ap_sig_82();
    void thread_ap_sig_cseq_ST_st0_fsm1_0();
    void thread_ap_sig_cseq_ST_st1_fsm0_0();
    void thread_ap_sig_cseq_ST_st2_fsm1_1();
    void thread_header();
    void thread_header_ap_vld();
    void thread_header_new_6_phi_fu_154_p14();
    void thread_icmp5_fu_287_p2();
    void thread_icmp_fu_271_p2();
    void thread_inData_TDATA_blk_n();
    void thread_inData_TREADY();
    void thread_livewire();
    void thread_livewire_ap_vld();
    void thread_p_off_fu_255_p2();
    void thread_storemerge1_cast_fu_305_p3();
    void thread_storemerge2_cast_fu_319_p1();
    void thread_storemerge2_fu_312_p3();
    void thread_storemerge_phi_fu_125_p4();
    void thread_tmp_1_fu_293_p2();
    void thread_tmp_2_fu_261_p4();
    void thread_tmp_3_fu_195_p2();
    void thread_tmp_4_fu_277_p4();
    void thread_tmp_5_fu_213_p2();
    void thread_tmp_6_fu_225_p2();
    void thread_tmp_7_fu_231_p2();
    void thread_tmp_8_fu_237_p2();
    void thread_tmp_9_fu_243_p2();
    void thread_tmp_nbreadreq_fu_88_p4();
    void thread_tmp_s_fu_249_p2();
    void thread_ap_NS_fsm1();
    void thread_ap_NS_fsm0();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
