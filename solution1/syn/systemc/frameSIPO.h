// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _frameSIPO_HH_
#define _frameSIPO_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct frameSIPO : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > inData_TDATA;
    sc_in< sc_logic > inData_TVALID;
    sc_out< sc_logic > inData_TREADY;
    sc_in< sc_lv<128> > inData_TUSER;
    sc_in< sc_lv<8> > outData_TDATA;
    sc_in< sc_logic > outData_TVALID;
    sc_out< sc_logic > outData_TREADY;
    sc_in< sc_lv<128> > outData_TUSER;
    sc_out< sc_lv<1> > sfd_detected;
    sc_out< sc_logic > sfd_detected_ap_vld;
    sc_out< sc_lv<1> > src_addr;
    sc_out< sc_logic > src_addr_ap_vld;
    sc_out< sc_lv<1> > dest_addr;
    sc_out< sc_logic > dest_addr_ap_vld;
    sc_out< sc_lv<1> > ethertype;
    sc_out< sc_logic > ethertype_ap_vld;
    sc_out< sc_lv<1> > ping;
    sc_out< sc_logic > ping_ap_vld;


    // Module declarations
    frameSIPO(sc_module_name name);
    SC_HAS_PROCESS(frameSIPO);

    ~frameSIPO();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_18;
    sc_signal< sc_lv<1> > CNT_STATE;
    sc_signal< sc_lv<32> > byte_cnt;
    sc_signal< sc_logic > inData_TDATA_blk_n;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_70_p4;
    sc_signal< sc_lv<1> > sfd_detected_flag_1_phi_fu_132_p12;
    sc_signal< bool > ap_sig_57;
    sc_signal< sc_lv<1> > CNT_STATE_load_load_fu_196_p1;
    sc_signal< sc_lv<1> > tmp_6_fu_239_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_245_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_251_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_257_p2;
    sc_signal< sc_lv<1> > sfd_detected_new_1_phi_fu_155_p12;
    sc_signal< sc_lv<1> > tmp_3_fu_214_p2;
    sc_signal< sc_lv<16> > packet_type_load_1_phi_fu_178_p12;
    sc_signal< sc_lv<16> > tmp_s_fu_274_p3;
    sc_signal< sc_lv<16> > tmp_4_fu_269_p1;
    sc_signal< sc_lv<32> > tmp_5_fu_227_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< bool > ap_sig_192;
    sc_signal< bool > ap_sig_127;
    sc_signal< bool > ap_sig_51;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<8> ap_const_lv8_D5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_800;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_CNT_STATE_load_load_fu_196_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_127();
    void thread_ap_sig_18();
    void thread_ap_sig_192();
    void thread_ap_sig_51();
    void thread_ap_sig_57();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_dest_addr();
    void thread_dest_addr_ap_vld();
    void thread_ethertype();
    void thread_ethertype_ap_vld();
    void thread_inData_TDATA_blk_n();
    void thread_inData_TREADY();
    void thread_outData_TREADY();
    void thread_packet_type_load_1_phi_fu_178_p12();
    void thread_ping();
    void thread_ping_ap_vld();
    void thread_sfd_detected();
    void thread_sfd_detected_ap_vld();
    void thread_sfd_detected_flag_1_phi_fu_132_p12();
    void thread_sfd_detected_new_1_phi_fu_155_p12();
    void thread_src_addr();
    void thread_src_addr_ap_vld();
    void thread_tmp_2_fu_257_p2();
    void thread_tmp_3_fu_214_p2();
    void thread_tmp_4_fu_269_p1();
    void thread_tmp_5_fu_227_p2();
    void thread_tmp_6_fu_239_p2();
    void thread_tmp_7_fu_245_p2();
    void thread_tmp_8_fu_251_p2();
    void thread_tmp_nbreadreq_fu_70_p4();
    void thread_tmp_s_fu_274_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
