-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity frameSIPO is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inData_TVALID : IN STD_LOGIC;
    inData_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    inData_TREADY : OUT STD_LOGIC;
    inData_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    header : OUT STD_LOGIC_VECTOR (7 downto 0);
    header_ap_vld : OUT STD_LOGIC;
    livewire : OUT STD_LOGIC_VECTOR (0 downto 0);
    livewire_ap_vld : OUT STD_LOGIC );
end;


architecture behav of frameSIPO is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "frameSIPO,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.884375,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=61,HLS_SYN_LUT=225}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_D5 : STD_LOGIC_VECTOR (7 downto 0) := "11010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_FFFFFFF0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_32 : BOOLEAN;
    signal tmp_nbreadreq_fu_88_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_45 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_51 : BOOLEAN;
    signal CNT_STATE : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal byte_cnt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal inData_TDATA_blk_n : STD_LOGIC;
    signal tmp_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_reg_324_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal CNT_STATE_load_load_fu_183_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal CNT_STATE_load_reg_328 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_335 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_6_reg_335_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_339_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_8_reg_343_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_9_reg_347_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_351 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_351_pp0_iter0 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_355 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_360 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_storemerge_reg_122pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_phi_fu_125_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_header_new_reg_133pp0_it0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_header_new_reg_133pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_header_new_6_reg_146pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal header_new_6_phi_fu_154_p14 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_header_new_6_reg_146pp0_it0 : STD_LOGIC_VECTOR (7 downto 0);
    signal storemerge2_cast_fu_319_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_off_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_261_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_277_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp5_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge1_cast_fu_305_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal storemerge2_fu_312_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_160 : BOOLEAN;
    signal ap_sig_164 : BOOLEAN;
    signal ap_sig_173 : BOOLEAN;
    signal ap_sig_191 : BOOLEAN;
    signal ap_sig_195 : BOOLEAN;
    signal ap_sig_55 : BOOLEAN;
    signal ap_sig_136 : BOOLEAN;
    signal ap_sig_142 : BOOLEAN;
    signal ap_sig_315 : BOOLEAN;
    signal ap_sig_82 : BOOLEAN;
    signal ap_sig_322 : BOOLEAN;
    signal ap_sig_212 : BOOLEAN;
    signal ap_sig_325 : BOOLEAN;


begin




    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    CNT_STATE_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and not((ap_const_lv1_0 = tmp_7_fu_231_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2) and not((ap_const_lv1_0 = tmp_9_fu_243_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and not((ap_const_lv1_0 = tmp_8_fu_237_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and not((ap_const_lv1_0 = tmp_6_fu_225_p2))))) then 
                CNT_STATE <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2) and (ap_const_lv1_0 = tmp_9_fu_243_p2) and (ap_const_lv1_0 = tmp_s_fu_249_p2))) then 
                CNT_STATE <= tmp_1_fu_293_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and (ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1))) then 
                CNT_STATE <= storemerge_phi_fu_125_p4;
            end if; 
        end if;
    end process;

    ap_reg_phiprechg_header_new_6_reg_146pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_55) then
                if (ap_sig_195) then 
                    ap_reg_phiprechg_header_new_6_reg_146pp0_it1 <= ap_const_lv8_40;
                elsif (ap_sig_191) then 
                    ap_reg_phiprechg_header_new_6_reg_146pp0_it1 <= ap_const_lv8_10;
                elsif (ap_sig_173) then 
                    ap_reg_phiprechg_header_new_6_reg_146pp0_it1 <= ap_const_lv8_4;
                elsif (ap_sig_164) then 
                    ap_reg_phiprechg_header_new_6_reg_146pp0_it1 <= ap_const_lv8_8;
                elsif (ap_sig_160) then 
                    ap_reg_phiprechg_header_new_6_reg_146pp0_it1 <= ap_const_lv8_20;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_header_new_6_reg_146pp0_it1 <= ap_reg_phiprechg_header_new_6_reg_146pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    ap_reg_phiprechg_header_new_reg_133pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_55) then
                if (ap_sig_142) then 
                    ap_reg_phiprechg_header_new_reg_133pp0_it1 <= ap_const_lv8_80;
                elsif (ap_sig_136) then 
                    ap_reg_phiprechg_header_new_reg_133pp0_it1 <= ap_const_lv8_0;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_header_new_reg_133pp0_it1 <= ap_reg_phiprechg_header_new_reg_133pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    byte_cnt_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_82) then
                if (not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1))) then 
                    byte_cnt <= tmp_5_fu_213_p2;
                elsif (ap_sig_315) then 
                    byte_cnt <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45))) then
                CNT_STATE_load_reg_328 <= CNT_STATE;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2) and (ap_const_lv1_0 = tmp_9_fu_243_p2) and (ap_const_lv1_0 = tmp_s_fu_249_p2))) then
                icmp_reg_355 <= icmp_fu_271_p2;
                tmp_1_reg_360 <= tmp_1_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)))) then
                tmp_6_reg_335 <= tmp_6_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2))) then
                tmp_7_reg_339 <= tmp_7_fu_231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2))) then
                tmp_8_reg_343 <= tmp_8_fu_237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2))) then
                tmp_9_reg_347 <= tmp_9_fu_243_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(ap_sig_45))) then
                tmp_reg_324 <= tmp_nbreadreq_fu_88_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2) and (ap_const_lv1_0 = tmp_9_fu_243_p2))) then
                tmp_s_reg_351 <= tmp_s_fu_249_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm1_assign_proc : process (ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_45)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(ap_sig_45))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_45))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(ap_sig_45))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    ap_NS_fsm0_assign_proc : process (ap_CS_fsm0, ap_sig_45)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;
    CNT_STATE_load_load_fu_183_p1 <= CNT_STATE;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st1_fsm0_0, ap_sig_45)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(ap_sig_45))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_header_new_6_reg_146pp0_it0 <= "XXXXXXXX";
    ap_reg_phiprechg_header_new_reg_133pp0_it0 <= "XXXXXXXX";
    ap_reg_phiprechg_storemerge_reg_122pp0_it0 <= "X";
    ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0 <= CNT_STATE_load_reg_328;
    ap_reg_ppstg_tmp_6_reg_335_pp0_iter0 <= tmp_6_reg_335;
    ap_reg_ppstg_tmp_7_reg_339_pp0_iter0 <= tmp_7_reg_339;
    ap_reg_ppstg_tmp_8_reg_343_pp0_iter0 <= tmp_8_reg_343;
    ap_reg_ppstg_tmp_9_reg_347_pp0_iter0 <= tmp_9_reg_347;
    ap_reg_ppstg_tmp_reg_324_pp0_iter0 <= tmp_reg_324;
    ap_reg_ppstg_tmp_s_reg_351_pp0_iter0 <= tmp_s_reg_351;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_136_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_3_fu_195_p2)
    begin
                ap_sig_136 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and (ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1) and (ap_const_lv1_0 = tmp_3_fu_195_p2));
    end process;


    ap_sig_142_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_3_fu_195_p2)
    begin
                ap_sig_142 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and (ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1) and not((ap_const_lv1_0 = tmp_3_fu_195_p2)));
    end process;


    ap_sig_160_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_6_fu_225_p2, tmp_7_fu_231_p2)
    begin
                ap_sig_160 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and not((ap_const_lv1_0 = tmp_7_fu_231_p2)));
    end process;


    ap_sig_164_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_6_fu_225_p2, tmp_7_fu_231_p2, tmp_8_fu_237_p2, tmp_9_fu_243_p2)
    begin
                ap_sig_164 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2) and not((ap_const_lv1_0 = tmp_9_fu_243_p2)));
    end process;


    ap_sig_173_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_6_fu_225_p2, tmp_7_fu_231_p2, tmp_8_fu_237_p2, tmp_9_fu_243_p2, tmp_s_fu_249_p2)
    begin
                ap_sig_173 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and (ap_const_lv1_0 = tmp_8_fu_237_p2) and (ap_const_lv1_0 = tmp_9_fu_243_p2) and not((ap_const_lv1_0 = tmp_s_fu_249_p2)));
    end process;


    ap_sig_191_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_6_fu_225_p2, tmp_7_fu_231_p2, tmp_8_fu_237_p2)
    begin
                ap_sig_191 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and (ap_const_lv1_0 = tmp_6_fu_225_p2) and (ap_const_lv1_0 = tmp_7_fu_231_p2) and not((ap_const_lv1_0 = tmp_8_fu_237_p2)));
    end process;


    ap_sig_195_assign_proc : process(tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1, tmp_6_fu_225_p2)
    begin
                ap_sig_195 <= (not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1)) and not((ap_const_lv1_0 = tmp_6_fu_225_p2)));
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_21 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_212_assign_proc : process(ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_324_pp0_iter0)
    begin
                ap_sig_212 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_324_pp0_iter0)));
    end process;


    ap_sig_315_assign_proc : process(CNT_STATE_load_load_fu_183_p1, tmp_3_fu_195_p2)
    begin
                ap_sig_315 <= ((ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1) and (ap_const_lv1_0 = tmp_3_fu_195_p2));
    end process;


    ap_sig_32_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_32 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    ap_sig_322_assign_proc : process(ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0, ap_reg_ppstg_tmp_6_reg_335_pp0_iter0, ap_reg_ppstg_tmp_7_reg_339_pp0_iter0, ap_reg_ppstg_tmp_8_reg_343_pp0_iter0, ap_reg_ppstg_tmp_9_reg_347_pp0_iter0, ap_reg_ppstg_tmp_s_reg_351_pp0_iter0)
    begin
                ap_sig_322 <= (not((ap_const_lv1_0 = ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0)) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_6_reg_335_pp0_iter0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_7_reg_339_pp0_iter0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_8_reg_343_pp0_iter0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_9_reg_347_pp0_iter0) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_351_pp0_iter0));
    end process;


    ap_sig_325_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, tmp_nbreadreq_fu_88_p4, CNT_STATE_load_load_fu_183_p1)
    begin
                ap_sig_325 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_start) and (ap_const_lv1_0 = CNT_STATE_load_load_fu_183_p1));
    end process;


    ap_sig_45_assign_proc : process(ap_start, inData_TVALID, tmp_nbreadreq_fu_88_p4)
    begin
                ap_sig_45 <= (((inData_TVALID = ap_const_logic_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0))) or (ap_start = ap_const_logic_0));
    end process;


    ap_sig_51_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_51 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    ap_sig_55_assign_proc : process(ap_sig_cseq_ST_st1_fsm0_0, ap_sig_45)
    begin
                ap_sig_55 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(ap_sig_45));
    end process;


    ap_sig_82_assign_proc : process(ap_sig_cseq_ST_st1_fsm0_0, tmp_nbreadreq_fu_88_p4, ap_sig_45)
    begin
                ap_sig_82 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45));
    end process;


    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_32)
    begin
        if (ap_sig_32) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_51)
    begin
        if (ap_sig_51) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;

    header <= header_new_6_phi_fu_154_p14;

    header_ap_vld_assign_proc : process(ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_324_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_324_pp0_iter0)))) then 
            header_ap_vld <= ap_const_logic_1;
        else 
            header_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    header_new_6_phi_fu_154_p14_assign_proc : process(ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0, ap_reg_phiprechg_header_new_reg_133pp0_it1, ap_reg_phiprechg_header_new_6_reg_146pp0_it1, storemerge2_cast_fu_319_p1, ap_sig_322, ap_sig_212)
    begin
        if (ap_sig_212) then
            if (ap_sig_322) then 
                header_new_6_phi_fu_154_p14 <= storemerge2_cast_fu_319_p1;
            elsif ((ap_const_lv1_0 = ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0)) then 
                header_new_6_phi_fu_154_p14 <= ap_reg_phiprechg_header_new_reg_133pp0_it1;
            else 
                header_new_6_phi_fu_154_p14 <= ap_reg_phiprechg_header_new_6_reg_146pp0_it1;
            end if;
        else 
            header_new_6_phi_fu_154_p14 <= ap_reg_phiprechg_header_new_6_reg_146pp0_it1;
        end if; 
    end process;

    icmp5_fu_287_p2 <= "1" when (signed(tmp_4_fu_277_p4) < signed(ap_const_lv26_1)) else "0";
    icmp_fu_271_p2 <= "1" when (tmp_2_fu_261_p4 = ap_const_lv31_0) else "0";

    inData_TDATA_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, inData_TVALID, tmp_nbreadreq_fu_88_p4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not((ap_start = ap_const_logic_0)) and (ap_const_logic_1 = ap_start))) then 
            inData_TDATA_blk_n <= inData_TVALID;
        else 
            inData_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inData_TREADY_assign_proc : process(ap_sig_cseq_ST_st1_fsm0_0, tmp_nbreadreq_fu_88_p4, ap_sig_45)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_88_p4 = ap_const_lv1_0)) and not(ap_sig_45)))) then 
            inData_TREADY <= ap_const_logic_1;
        else 
            inData_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    livewire_assign_proc : process(ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0, ap_sig_212)
    begin
        if (ap_sig_212) then
            if (not((ap_const_lv1_0 = ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0))) then 
                livewire <= ap_const_lv1_1;
            elsif ((ap_const_lv1_0 = ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0)) then 
                livewire <= ap_const_lv1_0;
            else 
                livewire <= "X";
            end if;
        else 
            livewire <= "X";
        end if; 
    end process;


    livewire_ap_vld_assign_proc : process(ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_324_pp0_iter0, ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_324_pp0_iter0)) and (ap_const_lv1_0 = ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_324_pp0_iter0)) and not((ap_const_lv1_0 = ap_reg_ppstg_CNT_STATE_load_reg_328_pp0_iter0))))) then 
            livewire_ap_vld <= ap_const_logic_1;
        else 
            livewire_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_off_fu_255_p2 <= std_logic_vector(unsigned(byte_cnt) + unsigned(ap_const_lv32_FFFFFFF0));
    storemerge1_cast_fu_305_p3 <= 
        ap_const_lv3_7 when (icmp_reg_355(0) = '1') else 
        ap_const_lv3_2;
        storemerge2_cast_fu_319_p1 <= std_logic_vector(resize(signed(storemerge2_fu_312_p3),8));

    storemerge2_fu_312_p3 <= 
        storemerge1_cast_fu_305_p3 when (tmp_1_reg_360(0) = '1') else 
        ap_const_lv3_1;

    storemerge_phi_fu_125_p4_assign_proc : process(ap_reg_phiprechg_storemerge_reg_122pp0_it0, tmp_3_fu_195_p2, ap_sig_325)
    begin
        if (ap_sig_325) then
            if (not((ap_const_lv1_0 = tmp_3_fu_195_p2))) then 
                storemerge_phi_fu_125_p4 <= ap_const_lv1_1;
            elsif ((ap_const_lv1_0 = tmp_3_fu_195_p2)) then 
                storemerge_phi_fu_125_p4 <= ap_const_lv1_0;
            else 
                storemerge_phi_fu_125_p4 <= ap_reg_phiprechg_storemerge_reg_122pp0_it0;
            end if;
        else 
            storemerge_phi_fu_125_p4 <= ap_reg_phiprechg_storemerge_reg_122pp0_it0;
        end if; 
    end process;

    tmp_1_fu_293_p2 <= (icmp_fu_271_p2 or icmp5_fu_287_p2);
    tmp_2_fu_261_p4 <= p_off_fu_255_p2(31 downto 1);
    tmp_3_fu_195_p2 <= "1" when (inData_TDATA = ap_const_lv8_D5) else "0";
    tmp_4_fu_277_p4 <= tmp_5_fu_213_p2(31 downto 6);
    tmp_5_fu_213_p2 <= std_logic_vector(unsigned(byte_cnt) + unsigned(ap_const_lv32_1));
    tmp_6_fu_225_p2 <= "1" when (signed(tmp_5_fu_213_p2) < signed(ap_const_lv32_7)) else "0";
    tmp_7_fu_231_p2 <= "1" when (signed(tmp_5_fu_213_p2) < signed(ap_const_lv32_D)) else "0";
    tmp_8_fu_237_p2 <= "1" when (tmp_5_fu_213_p2 = ap_const_lv32_D) else "0";
    tmp_9_fu_243_p2 <= "1" when (tmp_5_fu_213_p2 = ap_const_lv32_E) else "0";
    tmp_nbreadreq_fu_88_p4 <= (0=>(inData_TVALID), others=>'-');
    tmp_s_fu_249_p2 <= "1" when (signed(tmp_5_fu_213_p2) < signed(ap_const_lv32_11)) else "0";
end behav;
